import org.apache.tools.ant.taskdefs.condition.Os

repositories {
  ivy {
    url 'https://releases.hashicorp.com/'
    patternLayout {
      /* Terraform release website uses a different layout than standard maven
         structure (underscores insted of dashes and no POM file). */
      artifact(
        '/[organization]/[revision]/[module]_[revision]_[classifier].[ext]' )
    }
    metadataSources { 
      // this tells Gradle only the artifact is there, no other metadata files
      artifact()
    }
  }
}
  
configurations {
  tfBinary
}

dependencies {
  tfBinary "terraform:terraform:1.1.4:${tfOsClassifier}@zip"
}

task showTfBinaryLocation {
  doLast {
    println "Terraform binary: " + configurations.tfBinary.singleFile
  }
}

task unzipTfBinary(type: Copy){
  from zipTree(configurations.tfBinary.singleFile)
  into configurations.tfBinary.singleFile.parentFile
}

task tfVersion(type: Exec){
  dependsOn(unzipTfBinary)
  commandLine "${configurations.tfBinary.singleFile.parentFile}/terraform", 
    'version'
}

task tfHelp(type: Exec){
  dependsOn(unzipTfBinary)
  commandLine "${configurations.tfBinary.singleFile.parentFile}/terraform", 
    '-help'
}

task tfInit(type: Exec){
  dependsOn(unzipTfBinary)
  commandLine "${configurations.tfBinary.singleFile.parentFile}/terraform", 
    'init'
}

task tfShow(type: Exec){
  dependsOn(unzipTfBinary)
  commandLine "${configurations.tfBinary.singleFile.parentFile}/terraform", 
    'show'
}

/* Can't use a plugin like google/os-detector because Terraform uses a different
architecture naming scheme. */
static String getTfOsClassifier() {
  if (Os.isFamily(Os.FAMILY_WINDOWS)) {
    if (Os.isArch("amd64")) {
      return "windows_amd64"
    }
  } else if (Os.isFamily(Os.FAMILY_UNIX)) {
    if (Os.isArch("amd64")) {
      return "linux_amd64"
    }
  }
  
  println System.properties
  throw new GradleException("Don't know classifier for current platform")
}